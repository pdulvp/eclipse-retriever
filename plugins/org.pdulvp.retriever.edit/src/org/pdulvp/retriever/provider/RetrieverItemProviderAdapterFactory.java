/**
 */
package org.pdulvp.retriever.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.pdulvp.retriever.util.RetrieverAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RetrieverItemProviderAdapterFactory extends RetrieverAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
   * This keeps track of the root adapter factory that delegates to this adapter factory.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
   * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
   * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
   * This constructs an instance.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	public RetrieverItemProviderAdapterFactory() {
    supportedTypes.add(IEditingDomainItemProvider.class);
    supportedTypes.add(IStructuredItemContentProvider.class);
    supportedTypes.add(ITreeItemContentProvider.class);
    supportedTypes.add(IItemLabelProvider.class);
    supportedTypes.add(IItemPropertySource.class);
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.RetrieverRoot} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected RetrieverRootItemProvider retrieverRootItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.RetrieverRoot}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createRetrieverRootAdapter() {
    if (retrieverRootItemProvider == null) {
      retrieverRootItemProvider = new RetrieverRootItemProvider(this);
    }

    return retrieverRootItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.URLRetriever} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected URLRetrieverItemProvider urlRetrieverItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.URLRetriever}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createURLRetrieverAdapter() {
    if (urlRetrieverItemProvider == null) {
      urlRetrieverItemProvider = new URLRetrieverItemProvider(this);
    }

    return urlRetrieverItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.ElementRetriever} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected ElementRetrieverItemProvider elementRetrieverItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.ElementRetriever}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createElementRetrieverAdapter() {
    if (elementRetrieverItemProvider == null) {
      elementRetrieverItemProvider = new ElementRetrieverItemProvider(this);
    }

    return elementRetrieverItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.AttributeRetriever} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected AttributeRetrieverItemProvider attributeRetrieverItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.AttributeRetriever}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createAttributeRetrieverAdapter() {
    if (attributeRetrieverItemProvider == null) {
      attributeRetrieverItemProvider = new AttributeRetrieverItemProvider(this);
    }

    return attributeRetrieverItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.URIVariable} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected URIVariableItemProvider uriVariableItemProvider;

  /**
   * This creates an adapter for a {@link org.pdulvp.retriever.URIVariable}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createURIVariableAdapter() {
    if (uriVariableItemProvider == null) {
      uriVariableItemProvider = new URIVariableItemProvider(this);
    }

    return uriVariableItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.TransformationRetriever} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TransformationRetrieverItemProvider transformationRetrieverItemProvider;

  /**
   * This creates an adapter for a {@link org.pdulvp.retriever.TransformationRetriever}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createTransformationRetrieverAdapter() {
    if (transformationRetrieverItemProvider == null) {
      transformationRetrieverItemProvider = new TransformationRetrieverItemProvider(this);
    }

    return transformationRetrieverItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.RetrieverContainer} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected RetrieverContainerItemProvider retrieverContainerItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.RetrieverContainer}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createRetrieverContainerAdapter() {
    if (retrieverContainerItemProvider == null) {
      retrieverContainerItemProvider = new RetrieverContainerItemProvider(this);
    }

    return retrieverContainerItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.RetrieverPkg} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected RetrieverPkgItemProvider retrieverPkgItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.RetrieverPkg}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createRetrieverPkgAdapter() {
    if (retrieverPkgItemProvider == null) {
      retrieverPkgItemProvider = new RetrieverPkgItemProvider(this);
    }

    return retrieverPkgItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.ReferencedRetriever} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected ReferencedRetrieverItemProvider referencedRetrieverItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.ReferencedRetriever}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createReferencedRetrieverAdapter() {
    if (referencedRetrieverItemProvider == null) {
      referencedRetrieverItemProvider = new ReferencedRetrieverItemProvider(this);
    }

    return referencedRetrieverItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.TransformationService} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected TransformationServiceItemProvider transformationServiceItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.TransformationService}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createTransformationServiceAdapter() {
    if (transformationServiceItemProvider == null) {
      transformationServiceItemProvider = new TransformationServiceItemProvider(this);
    }

    return transformationServiceItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.CreateEObject} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected CreateEObjectItemProvider createEObjectItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.CreateEObject}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createCreateEObjectAdapter() {
    if (createEObjectItemProvider == null) {
      createEObjectItemProvider = new CreateEObjectItemProvider(this);
    }

    return createEObjectItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.CreateDirectEObject} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CreateDirectEObjectItemProvider createDirectEObjectItemProvider;

  /**
   * This creates an adapter for a {@link org.pdulvp.retriever.CreateDirectEObject}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createCreateDirectEObjectAdapter() {
    if (createDirectEObjectItemProvider == null) {
      createDirectEObjectItemProvider = new CreateDirectEObjectItemProvider(this);
    }

    return createDirectEObjectItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.CreateEReference} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected CreateEReferenceItemProvider createEReferenceItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.CreateEReference}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createCreateEReferenceAdapter() {
    if (createEReferenceItemProvider == null) {
      createEReferenceItemProvider = new CreateEReferenceItemProvider(this);
    }

    return createEReferenceItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.CreateEAttribute} instances.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	protected CreateEAttributeItemProvider createEAttributeItemProvider;

	/**
   * This creates an adapter for a {@link org.pdulvp.retriever.CreateEAttribute}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter createCreateEAttributeAdapter() {
    if (createEAttributeItemProvider == null) {
      createEAttributeItemProvider = new CreateEAttributeItemProvider(this);
    }

    return createEAttributeItemProvider;
  }

	/**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.LoadResource} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LoadResourceItemProvider loadResourceItemProvider;

  /**
   * This creates an adapter for a {@link org.pdulvp.retriever.LoadResource}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createLoadResourceAdapter() {
    if (loadResourceItemProvider == null) {
      loadResourceItemProvider = new LoadResourceItemProvider(this);
    }

    return loadResourceItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.SetVariable} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SetVariableItemProvider setVariableItemProvider;

  /**
   * This creates an adapter for a {@link org.pdulvp.retriever.SetVariable}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createSetVariableAdapter() {
    if (setVariableItemProvider == null) {
      setVariableItemProvider = new SetVariableItemProvider(this);
    }

    return setVariableItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.CreateFile} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CreateFileItemProvider createFileItemProvider;

  /**
   * This creates an adapter for a {@link org.pdulvp.retriever.CreateFile}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createCreateFileAdapter() {
    if (createFileItemProvider == null) {
      createFileItemProvider = new CreateFileItemProvider(this);
    }

    return createFileItemProvider;
  }

  /**
   * This keeps track of the one adapter used for all {@link org.pdulvp.retriever.If} instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfItemProvider ifItemProvider;

  /**
   * This creates an adapter for a {@link org.pdulvp.retriever.If}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Adapter createIfAdapter() {
    if (ifItemProvider == null) {
      ifItemProvider = new IfItemProvider(this);
    }

    return ifItemProvider;
  }

  /**
   * This returns the root adapter factory that contains this factory.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	public ComposeableAdapterFactory getRootAdapterFactory() {
    return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
  }

	/**
   * This sets the composed adapter factory that contains this factory.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
    this.parentAdapterFactory = parentAdapterFactory;
  }

	/**
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public boolean isFactoryForType(Object type) {
    return supportedTypes.contains(type) || super.isFactoryForType(type);
  }

	/**
   * This implementation substitutes the factory itself as the key for the adapter.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
    return super.adapt(notifier, this);
  }

	/**
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	@Override
	public Object adapt(Object object, Object type) {
    if (isFactoryForType(type)) {
      Object adapter = super.adapt(object, type);
      if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
        return adapter;
      }
    }

    return null;
  }

	/**
   * This adds a listener.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	public void addListener(INotifyChangedListener notifyChangedListener) {
    changeNotifier.addListener(notifyChangedListener);
  }

	/**
   * This removes a listener.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
    changeNotifier.removeListener(notifyChangedListener);
  }

	/**
   * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	public void fireNotifyChanged(Notification notification) {
    changeNotifier.fireNotifyChanged(notification);

    if (parentAdapterFactory != null) {
      parentAdapterFactory.fireNotifyChanged(notification);
    }
  }

	/**
   * This disposes all of the item providers created by this factory. 
   * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
   * @generated
   */
	public void dispose() {
    if (retrieverRootItemProvider != null) retrieverRootItemProvider.dispose();
    if (retrieverPkgItemProvider != null) retrieverPkgItemProvider.dispose();
    if (retrieverContainerItemProvider != null) retrieverContainerItemProvider.dispose();
    if (urlRetrieverItemProvider != null) urlRetrieverItemProvider.dispose();
    if (uriVariableItemProvider != null) uriVariableItemProvider.dispose();
    if (elementRetrieverItemProvider != null) elementRetrieverItemProvider.dispose();
    if (attributeRetrieverItemProvider != null) attributeRetrieverItemProvider.dispose();
    if (transformationRetrieverItemProvider != null) transformationRetrieverItemProvider.dispose();
    if (transformationServiceItemProvider != null) transformationServiceItemProvider.dispose();
    if (referencedRetrieverItemProvider != null) referencedRetrieverItemProvider.dispose();
    if (setVariableItemProvider != null) setVariableItemProvider.dispose();
    if (createEObjectItemProvider != null) createEObjectItemProvider.dispose();
    if (createDirectEObjectItemProvider != null) createDirectEObjectItemProvider.dispose();
    if (createEReferenceItemProvider != null) createEReferenceItemProvider.dispose();
    if (createEAttributeItemProvider != null) createEAttributeItemProvider.dispose();
    if (createFileItemProvider != null) createFileItemProvider.dispose();
    if (loadResourceItemProvider != null) loadResourceItemProvider.dispose();
    if (ifItemProvider != null) ifItemProvider.dispose();
  }

}
